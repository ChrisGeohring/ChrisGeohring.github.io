{"version":3,"sources":["components/Navbar/index.tsx","sections/contact/index.tsx","sections/home/index.tsx","sections/aboutme/index.tsx","sections/projects/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MyNavbar","props","toggle","cs","state","isOpen","setState","isDarkMode","window","matchMedia","matches","Navbar","color","dark","this","light","expand","fixed","id","Container","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Component","Contact","isStopped","isPaused","alt","src","width","height","Home","autoPlay","loop","muted","playsInline","type","AboutMe","Row","Col","xs","Projects","Card","CardBody","CardTitle","CardText","Badge","variant","Button","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9a0846a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport './index.scss';\r\n\r\ninterface NavProps {\r\n  isOpen: boolean;\r\n}\r\nexport default class MyNavbar extends Component<{}, NavProps> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { isOpen: false };\r\n  }\r\n\r\n  toggle = (): void => {\r\n    const cs = this.state.isOpen;\r\n    this.setState({ isOpen: !cs });\r\n  };\r\n\r\n  isDarkMode = (): boolean => {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar\r\n          color=\"faded\"\r\n          dark={this.isDarkMode()}\r\n          light={!this.isDarkMode()}\r\n          expand=\"md\"\r\n          fixed=\"top\"\r\n          id=\"my-navbar\"\r\n        >\r\n          <Container>\r\n            <NavbarBrand href=\"#home\" className=\"mr-auto\" id=\"navbrand\">\r\n              Chris Geohring\r\n            </NavbarBrand>\r\n            <NavbarToggler id=\"navtoggle\" onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink href=\"#about\">About</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"#projects\">Projects</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"#contact\">Contact</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n// import Lottie from 'react-lottie';\r\nimport './index.scss';\r\n\r\ninterface ContactState {\r\n  isStopped: boolean;\r\n  isPaused: boolean;\r\n}\r\n\r\nexport default class Contact extends Component<{}, ContactState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { isStopped: false, isPaused: false };\r\n  }\r\n\r\n  // render will know everything!\r\n  render() {\r\n    // const defaultOptions = {\r\n    //   loop: false,\r\n    //   autoplay: true,\r\n    //   animationData: require('./react-logo.json'),\r\n    //   rendererSettings: {\r\n    //     preserveAspectRatio: 'xMidYMid slice',\r\n    //   },\r\n    // };\r\n\r\n    return (\r\n      <div>\r\n        <footer id=\"contact\">\r\n          <a id=\"linkedin\" href=\"https://www.linkedin.com/in/chrisgeohring\">\r\n            <img alt=\"LinkedIn\" src=\"./linkedinbw.png\" width=\"40\" height=\"40\" />\r\n          </a>\r\n          {/* <Lottie\r\n              options={defaultOptions}\r\n              height={50}\r\n              width={50}\r\n              isStopped={this.state.isStopped}\r\n              isPaused={this.state.isPaused}\r\n            /> */}\r\n          <br />\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './index.scss';\r\n\r\nexport default class Home extends Component<{}, {}> {\r\n  render() {\r\n    return (\r\n      <section id=\"home\">\r\n        <video id=\"myVideo\" autoPlay loop muted playsInline>\r\n          <source src=\"me.mp4\" type=\"video/mp4\" />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './index.scss';\r\n\r\nexport default class AboutMe extends Component<{}, {}> {\r\n  // render will know everything!\r\n  render() {\r\n    return (\r\n      <section id=\"about\">\r\n        <Container id=\"aboutme-column\">\r\n          <div id=\"aboutme-blurb\">\r\n            <h2>About Me</h2>\r\n            <p>\r\n              I'm from Fort Collins, Colorado. I started programming in 2014 at Colorado State University, with my first\r\n              languages being Java, C++, and Python.\r\n              <br />\r\n              In the summer of 2016 I started an internship with HP in Fort Collins to help develop web services.\r\n              <br />\r\n              <br />\r\n              My summer internship turned into a year round job until my graduation in 2017. I then joined as a full\r\n              time employee.\r\n              <br />\r\n              In 2018, I took a job in San Diego for a full stack development role for HP Reveal. I continue to work for\r\n              HP today.\r\n            </p>\r\n            <br />\r\n            <Row id=\"images\">\r\n              <Col xs=\"6\">\r\n                <a href=\"https://www.colostate.edu\">\r\n                  <img alt=\"ColoradoState\" src=\"./rams.png\" width=\"120\" height=\"120\" />\r\n                </a>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                <a href=\"https://www.hp.com\">\r\n                  <img alt=\"HP\" src=\"./hp.png\" width=\"120\" height=\"120\" />\r\n                </a>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Badge, Button, Container, Card, CardBody, CardTitle, CardText } from 'reactstrap';\r\nimport './index.scss';\r\n// import Lottie from 'react-lottie';\r\n\r\nexport default class Projects extends Component<{}, {}> {\r\n  // render will know everything!\r\n  render() {\r\n    return (\r\n      // <section id=\"projects\">\r\n      //   <Container id=\"projects-column\">\r\n      //     <div id=\"projects-blurb\">\r\n      //       <h2>Projects</h2>\r\n      //     </div>\r\n      //   </Container>\r\n      // </section>\r\n\r\n      <section id=\"projects\">\r\n        <Container id=\"projects-container\">\r\n          <div id=\"pinner\">\r\n            <div id=\"projects-blurb\">\r\n              <br />\r\n              <br />\r\n              <h2>Projects</h2>\r\n              <br />\r\n              <br />\r\n              <Row className=\"justify-content-center\">\r\n                <Card>\r\n                  {/* <a href=\"https://lottiefiles.com/579-scan-qr-code-success\" >\r\n        <Lottie options={defaultOptions}\r\n                        height={140}\r\n                        width={140}/>\r\n                        </a> */}\r\n                  <CardBody>\r\n                    <CardTitle>Verify</CardTitle>\r\n                    <CardText>\r\n                      Worked on Verify, the web app designed for mobile devices to scan Secure QR Codes.\r\n                    </CardText>\r\n                    <Badge variant=\"secondary\">HTML</Badge>\r\n                    <Badge variant=\"secondary\">CSS</Badge>\r\n                    <Badge variant=\"secondary\">Javascript</Badge>\r\n                    <Badge variant=\"secondary\">C++</Badge>\r\n                    <Badge variant=\"secondary\">Rails</Badge>\r\n                    <br />\r\n                    <br />\r\n                    <Button className=\"buttons\" variant=\"primary\" href=\"https://verify.linkcreationstudio.com\">\r\n                      Visit\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card>\r\n                  {/* <CardImg src={linkReaderImage} style={{    width: '130px', marginTop: '10px', marginRight: 'auto', marginLeft: 'auto'}} /> */}\r\n                  <CardBody>\r\n                    <CardTitle>LinkReader</CardTitle>\r\n                    <CardText>\r\n                      Worked on LinkReader, the Android and iOS app designed to scan Link enabled content.\r\n                    </CardText>\r\n                    <Badge variant=\"secondary\">Objective-C</Badge>\r\n                    <Badge variant=\"secondary\">Java</Badge>\r\n                    <Badge variant=\"secondary\">C++</Badge>\r\n                    <br />\r\n                    <br />\r\n                    <Button className=\"buttons\" variant=\"primary\" href=\"https://mylinks.linkcreationstudio.com/app\">\r\n                      Visit\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card>\r\n                  {/* <CardImg src={revealImage} style={{ width: '90%', marginTop: '40px', marginBottom: '10px', marginRight: 'auto', marginLeft: 'auto'}} /> */}\r\n                  <CardBody>\r\n                    <CardTitle>HP Reveal</CardTitle>\r\n                    <CardText>\r\n                      Worked on Reveal, the platform enabling smart packaging for anti-counterfeiting, tracking, and\r\n                      engaging customer experiences.\r\n                    </CardText>\r\n                    <Badge variant=\"secondary\">HTML</Badge>\r\n                    <Badge variant=\"secondary\">CSS</Badge>\r\n                    <Badge variant=\"secondary\">Javascript</Badge>\r\n                    <Badge variant=\"secondary\">Rails</Badge>\r\n                    <Badge variant=\"secondary\">C++</Badge>\r\n                    <br />\r\n                    <br />\r\n                    <Button className=\"buttons\" variant=\"primary\" href=\"https://www.linkcreationstudio.com/\">\r\n                      Visit\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n\r\n                <Card>\r\n                  {/* <CardImg src={hpSmartImage} style={{ width: '130px', marginTop: '10px', marginRight: 'auto', marginLeft: 'auto'}} /> */}\r\n                  <CardBody>\r\n                    <CardTitle>SmartTasks</CardTitle>\r\n                    <CardText>\r\n                      Worked on the front and back end to enable SmartTasks for the HP SmartApp and the HP JetAdvantage\r\n                      Capture app.\r\n                    </CardText>\r\n                    <Badge variant=\"secondary\">Spring</Badge>\r\n                    <Badge variant=\"secondary\">Java</Badge>\r\n                    <Badge variant=\"secondary\">iOS</Badge>\r\n                    <Badge variant=\"secondary\">Android</Badge>\r\n                    <Badge variant=\"secondary\">Xamarin</Badge>\r\n                    <br />\r\n                    <br />\r\n                    <Button className=\"buttons\" variant=\"primary\" href=\"https://www.youtube.com/watch?v=T-jJy7hBS18\">\r\n                      Visit\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n\r\n                <Card>\r\n                  {/* <a href=\"https://lottiefiles.com/9185-scanner\" >\r\n            <Lottie options={scanningOptions}\r\n                        height={140}\r\n                        width={200}/>\r\n        </a> */}\r\n                  <CardBody>\r\n                    <CardTitle>PageLift</CardTitle>\r\n                    <CardText>\r\n                      Worked on PageLift, the C++ library that enables document detection, capture, and intelligent\r\n                      enhancement. Integrated into HP Smart and JetAdvantage Capture.\r\n                    </CardText>\r\n                    <Badge variant=\"secondary\">C++</Badge>\r\n                    <Badge variant=\"secondary\">Python</Badge>\r\n                    <Badge variant=\"secondary\">Android</Badge>\r\n                    <Badge variant=\"secondary\">iOS</Badge>\r\n                    <Badge variant=\"secondary\">Xamarin</Badge>\r\n                    <br />\r\n                    <br />\r\n                    <Button\r\n                      className=\"buttons\"\r\n                      variant=\"primary\"\r\n                      href=\"https://play.google.com/store/apps/details?id=com.hp.printercontrol\"\r\n                    >\r\n                      Visit\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n\r\n                <Card>\r\n                  {/* <CardImg src={featherFrenzyImage} style={{    width: '130px', marginTop: '10px', marginRight: 'auto', marginLeft: 'auto'}} /> */}\r\n                  <CardBody>\r\n                    <CardTitle>Feather Frenzy</CardTitle>\r\n                    <CardText>\r\n                      Made this Android game with two of my friends in college as a side project. Game is inspired by a\r\n                      mini game from Super Mario 64 for the Nintendo DS.\r\n                    </CardText>\r\n                    <Badge variant=\"secondary\">Java</Badge>\r\n                    <Badge variant=\"secondary\">Android</Badge>\r\n                    <br />\r\n                    <br />\r\n                    <Button\r\n                      className=\"buttons\"\r\n                      variant=\"primary\"\r\n                      href=\"https://play.google.com/store/apps/details?id=com.chasm.featherfrenzy\"\r\n                    >\r\n                      Visit\r\n                    </Button>\r\n                  </CardBody>\r\n                </Card>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Contact from './sections/contact';\r\nimport Home from './sections/home';\r\nimport AboutMe from './sections/aboutme';\r\nimport Projects from './sections/projects';\r\n\r\nexport default class App extends Component<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Home />\r\n        <AboutMe />\r\n        <Projects />\r\n        <Contact />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config): void {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = (): void => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = (): void => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function register(config?: Config): void {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', (): void => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister(): void {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}